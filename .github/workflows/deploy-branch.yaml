name: Build and Deploy Branch

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: choice
        default: dev
        options:
          - dev
          # - prod
        required: true

jobs:
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    permissions: # Sjekk https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
      contents: "read"
      checks: "write"
      pull-requests: "write"
      id-token: "write"
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21
      - uses: gradle/actions/wrapper-validation@v5
      - uses: gradle/gradle-build-action@v3.5.0
        env:
          # Eksluder test dependencies
          DEPENDENCY_GRAPH_INCLUDE_CONFIGURATIONS: compileClasspath|runtimeClasspath
        with:
          gradle-version: wrapper
          dependency-graph: generate-and-submit
          arguments: --configuration-cache build installDist

      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdagpenger
          push_image: true # optional, default true
          tag: ${{ github.sha }}
          dockerfile: mediator/Dockerfile # optional, default Dockerfile
          docker_context: mediator # optional, default .
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-branch:
    name: Deploy branch
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
        contents: read
        id-token: write
    environment: ${{ inputs.environment }}-gcp
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ inputs.environment }}-gcp
          RESOURCE: .nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }},githubSha=${{ github.sha }}
          VARS: .nais/vars-${{ inputs.environment }}.yaml
          PRINT_PAYLOAD: true
