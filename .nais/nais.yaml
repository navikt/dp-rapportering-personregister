apiVersion: nais.io/v1alpha1
kind: Application
metadata:
  name: dp-rapportering-personregister
  namespace: teamdagpenger
  labels:
    team: teamdagpenger
spec:
  image: "{{ image }}"
  port: 8080
  prometheus:
    enabled: true
    path: /metrics
  liveness:
    path: /isAlive
  readiness:
    path: /isReady
  replicas:
    min: 2
    max: 4
  resources:
    limits:
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 256Mi
  secureLogs:
    enabled: true
  tokenx:
    enabled: true
  azure:
    application:
      enabled: true
  kafka:
    pool: "{{ kafka.pool }}"
  {{#if ingresses}}
  ingresses:
    {{#each ingresses as |url|}}
     - {{url}}
    {{/each}}
  {{/if}}
  leaderElection: true
  observability:
    logging:
      destinations:
        - id: elastic
    autoInstrumentation:
      enabled: true
      runtime: java
  gcp:
    sqlInstances:
      - type: POSTGRES_15
        highAvailability: true
        diskAutoresize: true
        tier: db-custom-1-3840
        pointInTimeRecovery: true
        databases:
          - name: dp-rapportering-personregister
            envVarPrefix: DB
        flags:
            - name: cloudsql.enable_pgaudit
              value: "on"
            - name: pgaudit.log
              value: 'write'
  accessPolicy:
    outbound:
      external:
        - host: dagpenger-unleash-api.nav.cloud.nais.io
        - host: "{{ PDL_API_HOST }}"
      rules:
        - application: dp-arena-meldeplikt-adapter
        - application: dp-meldekortregister
        - application: paw-arbeidssoekerregisteret-api-oppslag-v2
          namespace: paw
          cluster: "{{ cluster }}"
        - application: paw-kafka-key-generator
          namespace: paw
          cluster: "{{ cluster }}"
    inbound:
      rules:
        - application: dp-rapportering
        - application: dp-meldekortregister
        - application: dp-saksbehandling-frontend
        - application: dp-rapportering-saksbehandling-frontend
        - application: azure-token-generator
          namespace: nais
          cluster: dev-gcp
        {{#each additionalInbounds}}
        - application: "{{application}}"
          namespace: "{{namespace}}"
        {{/each}}
  envFrom:
    - secret: dp-rapportering-personregister-unleash-api-token
  env:
    - name: PDL_API_HOST
      value: "{{ PDL_API_HOST }}"
    - name: PDL_AUDIENCE
      value: "{{ PDL_AUDIENCE }}"
    - name: PDL_API_SCOPE
      value: "{{ PDL_API_SCOPE }}"
    - name: ARBEIDSSOKERREGISTER_OPPSLAG_HOST
      value: "{{ ARBEIDSSOKERREGISTER_OPPSLAG_HOST }}"
    - name: ARBEIDSSOKERREGISTER_OPPSLAG_SCOPE
      value: "{{ ARBEIDSSOKERREGISTER_OPPSLAG_SCOPE }}"
    - name: ARBEIDSSOKERREGISTER_RECORD_KEY_HOST
      value: "{{ ARBEIDSSOKERREGISTER_RECORD_KEY_HOST }}"
    - name: ARBEIDSSOKERREGISTER_RECORD_KEY_SCOPE
      value: "{{ ARBEIDSSOKERREGISTER_RECORD_KEY_SCOPE }}"
    - name: ARBEIDSSOKERPERIODER_TOPIC
      value: "{{ ARBEIDSSOKERPERIODER_TOPIC }}"
    - name: BEKREFTELSE_PAA_VEGNE_AV_TOPIC
      value: "{{ BEKREFTELSE_PAA_VEGNE_AV_TOPIC }}"
    - name: MELDEPLIKT_ADAPTER_HOST
      value: "{{ MELDEPLIKT_ADAPTER_HOST }}"
    - name: MELDEPLIKT_ADAPTER_SCOPE
      value: "{{ MELDEPLIKT_ADAPTER_SCOPE }}"
    - name: MELDEKORTREGISTER_HOST
      value: "{{ MELDEKORTREGISTER_HOST }}"
    - name: MELDEKORTREGISTER_SCOPE
      value: "{{ MELDEKORTREGISTER_SCOPE }}"
    - name: KAFKA_EXTRA_TOPIC
      value: "{{ KAFKA_EXTRA_TOPIC }}"
    - name: JDK_JAVA_OPTIONS # Bytter GC og lar JVMen se at det er flere CPU kjerner
      value: -XX:+UseParallelGC -XX:ActiveProcessorCount=4
    - name: GRUPPER_SAKSBEHANDLER
      value: {{azure.grupper.saksbehandler}}
  azure:
    application:
      enabled: true
      tenant: {{azure.tenant}}
      allowAllUsers: false
      claims:
        extra:
          - NAVident
        groups:
          - id: {{azure.grupper.saksbehandler}}
